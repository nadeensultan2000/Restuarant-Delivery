{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet RegisterComponent = class RegisterComponent {\n  constructor(auth) {\n    this.auth = auth;\n    this.formdata = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirmpassword: \"\",\n      Address: \"\",\n      phone: \"\"\n    };\n    this.submit = false;\n    this.errorMessage = \"\";\n    this.loading = false;\n  }\n  ngOnInit() {\n    this.auth.canAuthenticate();\n  }\n  onSubmit() {\n    this.loading = true;\n    //call register service\n    this.auth.register(this.formdata.name, this.formdata.email, this.formdata.password).subscribe({\n      next: data => {\n        //store token from response data\n        this.auth.storeToken(data.idToken);\n        console.log('Registered idtoken is ' + data.idToken);\n        this.auth.canAuthenticate();\n      },\n      error: data => {\n        if (data.error.error.message == \"INVALID_EMAIL\") {\n          this.errorMessage = \"Invalid Email!\";\n        } else if (data.error.error.message == \"EMAIL_EXISTS\") {\n          this.errorMessage = \"Already Email Exists!\";\n        } else {\n          this.errorMessage = \"Unknown error occured when creating this account!\";\n        }\n      }\n    }).add(() => {\n      this.loading = false;\n      console.log('Register process completed!');\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAO1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAL1B,aAAQ,GAAG;MAACC,IAAI,EAAC,EAAE;MAACC,KAAK,EAAC,EAAE;MAACC,QAAQ,EAAC,EAAE;MAAEC,eAAe,EAAC,EAAE;MAAEC,OAAO,EAAC,EAAE;MAACC,KAAK,EAAC;IAAE,CAAC;IAChF,WAAM,GAAC,KAAK;IACZ,iBAAY,GAAC,EAAE;IACf,YAAO,GAAC,KAAK;EAE2B;EAExCC,QAAQ;IACN,IAAI,CAACP,IAAI,CAACQ,eAAe,EAAE;EAC7B;EAEAC,QAAQ;IAEJ,IAAI,CAACC,OAAO,GAAC,IAAI;IAEjB;IACA,IAAI,CAACV,IAAI,CACRW,QAAQ,CAAC,IAAI,CAACC,QAAQ,CAACX,IAAI,EAAC,IAAI,CAACW,QAAQ,CAACV,KAAK,EAAC,IAAI,CAACU,QAAQ,CAACT,QAAQ,CAAC,CACvEU,SAAS,CAAC;MACPC,IAAI,EAACC,IAAI,IAAE;QACP;QACA,IAAI,CAACf,IAAI,CAACgB,UAAU,CAACD,IAAI,CAACE,OAAO,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,wBAAwB,GAACJ,IAAI,CAACE,OAAO,CAAC;QAClD,IAAI,CAACjB,IAAI,CAACQ,eAAe,EAAE;MAE/B,CAAC;MACDY,KAAK,EAACL,IAAI,IAAE;QACR,IAAIA,IAAI,CAACK,KAAK,CAACA,KAAK,CAACC,OAAO,IAAE,eAAe,EAAE;UAE3C,IAAI,CAACC,YAAY,GAAG,gBAAgB;SAEvC,MAAM,IAAIP,IAAI,CAACK,KAAK,CAACA,KAAK,CAACC,OAAO,IAAE,cAAc,EAAE;UAEjD,IAAI,CAACC,YAAY,GAAG,uBAAuB;SAE9C,MAAI;UAED,IAAI,CAACA,YAAY,GAAG,mDAAmD;;MAE/E;KACH,CAAC,CAACC,GAAG,CAAC,MAAI;MACP,IAAI,CAACb,OAAO,GAAE,KAAK;MACnBQ,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC9C,CAAC,CAAC;EACN;CAGH;AAjDYrB,iBAAiB,eAL7BD,SAAS,CAAC;EACT2B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,GACW5B,iBAAiB,CAiD7B;SAjDYA,iBAAiB","names":["Component","RegisterComponent","constructor","auth","name","email","password","confirmpassword","Address","phone","ngOnInit","canAuthenticate","onSubmit","loading","register","formdata","subscribe","next","data","storeToken","idToken","console","log","error","message","errorMessage","add","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Rrestaurant Delivery\\restaurant-delivery\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent {\n\n  formdata = {name:\"\",email:\"\",password:\"\" ,confirmpassword:\"\" ,Address:\"\",phone:\"\"};\n    submit=false;\n    errorMessage=\"\";\n    loading=false;\n  \n    constructor(private auth:AuthService) { }\n  \n    ngOnInit(): void {\n      this.auth.canAuthenticate();\n    }\n  \n    onSubmit(){\n  \n        this.loading=true;\n  \n        //call register service\n        this.auth\n        .register(this.formdata.name,this.formdata.email,this.formdata.password)\n        .subscribe({\n            next:data=>{\n                //store token from response data\n                this.auth.storeToken(data.idToken);\n                console.log('Registered idtoken is '+data.idToken);\n                this.auth.canAuthenticate();\n  \n            },\n            error:data=>{\n                if (data.error.error.message==\"INVALID_EMAIL\") {\n  \n                    this.errorMessage = \"Invalid Email!\";\n  \n                } else if (data.error.error.message==\"EMAIL_EXISTS\") {\n  \n                    this.errorMessage = \"Already Email Exists!\";\n  \n                }else{\n  \n                    this.errorMessage = \"Unknown error occured when creating this account!\";\n                }\n            }\n        }).add(()=>{\n            this.loading =false;\n            console.log('Register process completed!');\n        })\n    }\n  \n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}